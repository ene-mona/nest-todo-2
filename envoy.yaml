static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8080  # Expose gRPC over HTTP
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_http
                route_config:
                  virtual_hosts:
                    - name: grpc_service
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/todo.TodoService"  # Your gRPC Service
                          route:
                            cluster: grpc_backend
                            timeout: 0s
                        - match:
                            prefix: "/todo.TodoService"  # Colleague's gRPC Service
                          route:
                            cluster: colleague_grpc_backend
                            timeout: 0s
                http_filters:
                  - name: envoy.filters.http.router
  clusters:
    - name: grpc_backend
      type: LOGICAL_DNS
      connect_timeout: 0.25s
      load_assignment:
        cluster_name: grpc_backend
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 50052  # Your gRPC Server
      http2_protocol_options: {}  # Required for gRPC

    - name: colleague_grpc_backend
      type: LOGICAL_DNS
      connect_timeout: 0.25s
      load_assignment:
        cluster_name: colleague_grpc_backend
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: nest-grpc-s9ah.onrender.com
                      port_value: 8080  # Forward calls to colleague's HTTP
      http2_protocol_options: {}
